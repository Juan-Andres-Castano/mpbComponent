/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_MPBPACKER_H
#define _MOCK_MPBPACKER_H

#include "mpbPacker.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_mpbPacker_Init(void);
void mock_mpbPacker_Destroy(void);
void mock_mpbPacker_Verify(void);




#define mpbPacker_AddMsg_IgnoreAndReturn(cmock_retval) mpbPacker_AddMsg_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mpbPacker_AddMsg_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* cmock_to_return);
#define mpbPacker_AddMsg_ExpectAnyArgsAndReturn(cmock_retval) mpbPacker_AddMsg_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mpbPacker_AddMsg_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* cmock_to_return);
#define mpbPacker_AddMsg_ExpectAndReturn(eErrorCode, ucCommand, ucLength, pData, pxMpbCrc, cmock_retval) mpbPacker_AddMsg_CMockExpectAndReturn(__LINE__, eErrorCode, ucCommand, ucLength, pData, pxMpbCrc, cmock_retval)
void mpbPacker_AddMsg_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eErrorCodes_t eErrorCode, uint8_t ucCommand, uint8_t ucLength, uint8_t* pData, xMpbCrc_t* pxMpbCrc, uint8_t* cmock_to_return);
typedef uint8_t* (* CMOCK_mpbPacker_AddMsg_CALLBACK)(eErrorCodes_t eErrorCode, uint8_t ucCommand, uint8_t ucLength, uint8_t* pData, xMpbCrc_t* pxMpbCrc, int cmock_num_calls);
void mpbPacker_AddMsg_StubWithCallback(CMOCK_mpbPacker_AddMsg_CALLBACK Callback);
#define mpbPacker_AddMsg_ExpectWithArrayAndReturn(eErrorCode, ucCommand, ucLength, pData, pData_Depth, pxMpbCrc, pxMpbCrc_Depth, cmock_retval) mpbPacker_AddMsg_CMockExpectWithArrayAndReturn(__LINE__, eErrorCode, ucCommand, ucLength, pData, pData_Depth, pxMpbCrc, pxMpbCrc_Depth, cmock_retval)
void mpbPacker_AddMsg_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, eErrorCodes_t eErrorCode, uint8_t ucCommand, uint8_t ucLength, uint8_t* pData, int pData_Depth, xMpbCrc_t* pxMpbCrc, int pxMpbCrc_Depth, uint8_t* cmock_to_return);
#define mpbPacker_AddMsg_ReturnThruPtr_pData(pData) mpbPacker_AddMsg_CMockReturnMemThruPtr_pData(__LINE__, pData, sizeof(*pData))
#define mpbPacker_AddMsg_ReturnArrayThruPtr_pData(pData, cmock_len) mpbPacker_AddMsg_CMockReturnMemThruPtr_pData(__LINE__, pData, (int)(cmock_len * (int)sizeof(*pData)))
#define mpbPacker_AddMsg_ReturnMemThruPtr_pData(pData, cmock_size) mpbPacker_AddMsg_CMockReturnMemThruPtr_pData(__LINE__, pData, cmock_size)
void mpbPacker_AddMsg_CMockReturnMemThruPtr_pData(UNITY_LINE_TYPE cmock_line, uint8_t* pData, int cmock_size);
#define mpbPacker_AddMsg_ReturnThruPtr_pxMpbCrc(pxMpbCrc) mpbPacker_AddMsg_CMockReturnMemThruPtr_pxMpbCrc(__LINE__, pxMpbCrc, sizeof(*pxMpbCrc))
#define mpbPacker_AddMsg_ReturnArrayThruPtr_pxMpbCrc(pxMpbCrc, cmock_len) mpbPacker_AddMsg_CMockReturnMemThruPtr_pxMpbCrc(__LINE__, pxMpbCrc, (int)(cmock_len * (int)sizeof(*pxMpbCrc)))
#define mpbPacker_AddMsg_ReturnMemThruPtr_pxMpbCrc(pxMpbCrc, cmock_size) mpbPacker_AddMsg_CMockReturnMemThruPtr_pxMpbCrc(__LINE__, pxMpbCrc, cmock_size)
void mpbPacker_AddMsg_CMockReturnMemThruPtr_pxMpbCrc(UNITY_LINE_TYPE cmock_line, xMpbCrc_t* pxMpbCrc, int cmock_size);
#define mpbPacker_AddMsg_IgnoreArg_eErrorCode() mpbPacker_AddMsg_CMockIgnoreArg_eErrorCode(__LINE__)
void mpbPacker_AddMsg_CMockIgnoreArg_eErrorCode(UNITY_LINE_TYPE cmock_line);
#define mpbPacker_AddMsg_IgnoreArg_ucCommand() mpbPacker_AddMsg_CMockIgnoreArg_ucCommand(__LINE__)
void mpbPacker_AddMsg_CMockIgnoreArg_ucCommand(UNITY_LINE_TYPE cmock_line);
#define mpbPacker_AddMsg_IgnoreArg_ucLength() mpbPacker_AddMsg_CMockIgnoreArg_ucLength(__LINE__)
void mpbPacker_AddMsg_CMockIgnoreArg_ucLength(UNITY_LINE_TYPE cmock_line);
#define mpbPacker_AddMsg_IgnoreArg_pData() mpbPacker_AddMsg_CMockIgnoreArg_pData(__LINE__)
void mpbPacker_AddMsg_CMockIgnoreArg_pData(UNITY_LINE_TYPE cmock_line);
#define mpbPacker_AddMsg_IgnoreArg_pxMpbCrc() mpbPacker_AddMsg_CMockIgnoreArg_pxMpbCrc(__LINE__)
void mpbPacker_AddMsg_CMockIgnoreArg_pxMpbCrc(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
