/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_NEPMATHCRCUTIL_H
#define _MOCK_NEPMATHCRCUTIL_H

#include "nepMathCrcUtil.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_nepMathCrcUtil_Init(void);
void mock_nepMathCrcUtil_Destroy(void);
void mock_nepMathCrcUtil_Verify(void);




#define vNepMathCrcUtilReflectData_Ignore() vNepMathCrcUtilReflectData_CMockIgnore()
void vNepMathCrcUtilReflectData_CMockIgnore(void);
#define vNepMathCrcUtilReflectData_ExpectAnyArgs() vNepMathCrcUtilReflectData_CMockExpectAnyArgs(__LINE__)
void vNepMathCrcUtilReflectData_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilReflectData_Expect(ucNumberOfBits, ulData, pulResult) vNepMathCrcUtilReflectData_CMockExpect(__LINE__, ucNumberOfBits, ulData, pulResult)
void vNepMathCrcUtilReflectData_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t ucNumberOfBits, uint32_t ulData, uint32_t* pulResult);
typedef void (* CMOCK_vNepMathCrcUtilReflectData_CALLBACK)(uint8_t ucNumberOfBits, uint32_t ulData, uint32_t* pulResult, int cmock_num_calls);
void vNepMathCrcUtilReflectData_StubWithCallback(CMOCK_vNepMathCrcUtilReflectData_CALLBACK Callback);
#define vNepMathCrcUtilReflectData_ExpectWithArray(ucNumberOfBits, ulData, pulResult, pulResult_Depth) vNepMathCrcUtilReflectData_CMockExpectWithArray(__LINE__, ucNumberOfBits, ulData, pulResult, pulResult_Depth)
void vNepMathCrcUtilReflectData_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint8_t ucNumberOfBits, uint32_t ulData, uint32_t* pulResult, int pulResult_Depth);
#define vNepMathCrcUtilReflectData_ReturnThruPtr_pulResult(pulResult) vNepMathCrcUtilReflectData_CMockReturnMemThruPtr_pulResult(__LINE__, pulResult, sizeof(*pulResult))
#define vNepMathCrcUtilReflectData_ReturnArrayThruPtr_pulResult(pulResult, cmock_len) vNepMathCrcUtilReflectData_CMockReturnMemThruPtr_pulResult(__LINE__, pulResult, (int)(cmock_len * (int)sizeof(*pulResult)))
#define vNepMathCrcUtilReflectData_ReturnMemThruPtr_pulResult(pulResult, cmock_size) vNepMathCrcUtilReflectData_CMockReturnMemThruPtr_pulResult(__LINE__, pulResult, cmock_size)
void vNepMathCrcUtilReflectData_CMockReturnMemThruPtr_pulResult(UNITY_LINE_TYPE cmock_line, uint32_t* pulResult, int cmock_size);
#define vNepMathCrcUtilReflectData_IgnoreArg_ucNumberOfBits() vNepMathCrcUtilReflectData_CMockIgnoreArg_ucNumberOfBits(__LINE__)
void vNepMathCrcUtilReflectData_CMockIgnoreArg_ucNumberOfBits(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilReflectData_IgnoreArg_ulData() vNepMathCrcUtilReflectData_CMockIgnoreArg_ulData(__LINE__)
void vNepMathCrcUtilReflectData_CMockIgnoreArg_ulData(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilReflectData_IgnoreArg_pulResult() vNepMathCrcUtilReflectData_CMockIgnoreArg_pulResult(__LINE__)
void vNepMathCrcUtilReflectData_CMockIgnoreArg_pulResult(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilReflectBytes_Ignore() vNepMathCrcUtilReflectBytes_CMockIgnore()
void vNepMathCrcUtilReflectBytes_CMockIgnore(void);
#define vNepMathCrcUtilReflectBytes_ExpectAnyArgs() vNepMathCrcUtilReflectBytes_CMockExpectAnyArgs(__LINE__)
void vNepMathCrcUtilReflectBytes_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilReflectBytes_Expect(ulNumberOfBytes, pucBuffer, pucResult) vNepMathCrcUtilReflectBytes_CMockExpect(__LINE__, ulNumberOfBytes, pucBuffer, pucResult)
void vNepMathCrcUtilReflectBytes_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t ulNumberOfBytes, const uint8_t* pucBuffer, uint8_t* pucResult);
typedef void (* CMOCK_vNepMathCrcUtilReflectBytes_CALLBACK)(uint32_t ulNumberOfBytes, const uint8_t* pucBuffer, uint8_t* pucResult, int cmock_num_calls);
void vNepMathCrcUtilReflectBytes_StubWithCallback(CMOCK_vNepMathCrcUtilReflectBytes_CALLBACK Callback);
#define vNepMathCrcUtilReflectBytes_ExpectWithArray(ulNumberOfBytes, pucBuffer, pucBuffer_Depth, pucResult, pucResult_Depth) vNepMathCrcUtilReflectBytes_CMockExpectWithArray(__LINE__, ulNumberOfBytes, pucBuffer, pucBuffer_Depth, pucResult, pucResult_Depth)
void vNepMathCrcUtilReflectBytes_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint32_t ulNumberOfBytes, const uint8_t* pucBuffer, int pucBuffer_Depth, uint8_t* pucResult, int pucResult_Depth);
#define vNepMathCrcUtilReflectBytes_ReturnThruPtr_pucResult(pucResult) vNepMathCrcUtilReflectBytes_CMockReturnMemThruPtr_pucResult(__LINE__, pucResult, sizeof(*pucResult))
#define vNepMathCrcUtilReflectBytes_ReturnArrayThruPtr_pucResult(pucResult, cmock_len) vNepMathCrcUtilReflectBytes_CMockReturnMemThruPtr_pucResult(__LINE__, pucResult, (int)(cmock_len * (int)sizeof(*pucResult)))
#define vNepMathCrcUtilReflectBytes_ReturnMemThruPtr_pucResult(pucResult, cmock_size) vNepMathCrcUtilReflectBytes_CMockReturnMemThruPtr_pucResult(__LINE__, pucResult, cmock_size)
void vNepMathCrcUtilReflectBytes_CMockReturnMemThruPtr_pucResult(UNITY_LINE_TYPE cmock_line, uint8_t* pucResult, int cmock_size);
#define vNepMathCrcUtilReflectBytes_IgnoreArg_ulNumberOfBytes() vNepMathCrcUtilReflectBytes_CMockIgnoreArg_ulNumberOfBytes(__LINE__)
void vNepMathCrcUtilReflectBytes_CMockIgnoreArg_ulNumberOfBytes(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilReflectBytes_IgnoreArg_pucBuffer() vNepMathCrcUtilReflectBytes_CMockIgnoreArg_pucBuffer(__LINE__)
void vNepMathCrcUtilReflectBytes_CMockIgnoreArg_pucBuffer(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilReflectBytes_IgnoreArg_pucResult() vNepMathCrcUtilReflectBytes_CMockIgnoreArg_pucResult(__LINE__)
void vNepMathCrcUtilReflectBytes_CMockIgnoreArg_pucResult(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilCalculate_Ignore() vNepMathCrcUtilCalculate_CMockIgnore()
void vNepMathCrcUtilCalculate_CMockIgnore(void);
#define vNepMathCrcUtilCalculate_ExpectAnyArgs() vNepMathCrcUtilCalculate_CMockExpectAnyArgs(__LINE__)
void vNepMathCrcUtilCalculate_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilCalculate_Expect(ucWidth, ulInitial, ulPolynomial, ulNumberOfBytes, pucBuffer, pulCrcValue) vNepMathCrcUtilCalculate_CMockExpect(__LINE__, ucWidth, ulInitial, ulPolynomial, ulNumberOfBytes, pucBuffer, pulCrcValue)
void vNepMathCrcUtilCalculate_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t ucWidth, uint32_t ulInitial, uint32_t ulPolynomial, uint32_t ulNumberOfBytes, const uint8_t* pucBuffer, uint32_t* pulCrcValue);
typedef void (* CMOCK_vNepMathCrcUtilCalculate_CALLBACK)(uint8_t ucWidth, uint32_t ulInitial, uint32_t ulPolynomial, uint32_t ulNumberOfBytes, const uint8_t* pucBuffer, uint32_t* pulCrcValue, int cmock_num_calls);
void vNepMathCrcUtilCalculate_StubWithCallback(CMOCK_vNepMathCrcUtilCalculate_CALLBACK Callback);
#define vNepMathCrcUtilCalculate_ExpectWithArray(ucWidth, ulInitial, ulPolynomial, ulNumberOfBytes, pucBuffer, pucBuffer_Depth, pulCrcValue, pulCrcValue_Depth) vNepMathCrcUtilCalculate_CMockExpectWithArray(__LINE__, ucWidth, ulInitial, ulPolynomial, ulNumberOfBytes, pucBuffer, pucBuffer_Depth, pulCrcValue, pulCrcValue_Depth)
void vNepMathCrcUtilCalculate_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint8_t ucWidth, uint32_t ulInitial, uint32_t ulPolynomial, uint32_t ulNumberOfBytes, const uint8_t* pucBuffer, int pucBuffer_Depth, uint32_t* pulCrcValue, int pulCrcValue_Depth);
#define vNepMathCrcUtilCalculate_ReturnThruPtr_pulCrcValue(pulCrcValue) vNepMathCrcUtilCalculate_CMockReturnMemThruPtr_pulCrcValue(__LINE__, pulCrcValue, sizeof(*pulCrcValue))
#define vNepMathCrcUtilCalculate_ReturnArrayThruPtr_pulCrcValue(pulCrcValue, cmock_len) vNepMathCrcUtilCalculate_CMockReturnMemThruPtr_pulCrcValue(__LINE__, pulCrcValue, (int)(cmock_len * (int)sizeof(*pulCrcValue)))
#define vNepMathCrcUtilCalculate_ReturnMemThruPtr_pulCrcValue(pulCrcValue, cmock_size) vNepMathCrcUtilCalculate_CMockReturnMemThruPtr_pulCrcValue(__LINE__, pulCrcValue, cmock_size)
void vNepMathCrcUtilCalculate_CMockReturnMemThruPtr_pulCrcValue(UNITY_LINE_TYPE cmock_line, uint32_t* pulCrcValue, int cmock_size);
#define vNepMathCrcUtilCalculate_IgnoreArg_ucWidth() vNepMathCrcUtilCalculate_CMockIgnoreArg_ucWidth(__LINE__)
void vNepMathCrcUtilCalculate_CMockIgnoreArg_ucWidth(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilCalculate_IgnoreArg_ulInitial() vNepMathCrcUtilCalculate_CMockIgnoreArg_ulInitial(__LINE__)
void vNepMathCrcUtilCalculate_CMockIgnoreArg_ulInitial(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilCalculate_IgnoreArg_ulPolynomial() vNepMathCrcUtilCalculate_CMockIgnoreArg_ulPolynomial(__LINE__)
void vNepMathCrcUtilCalculate_CMockIgnoreArg_ulPolynomial(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilCalculate_IgnoreArg_ulNumberOfBytes() vNepMathCrcUtilCalculate_CMockIgnoreArg_ulNumberOfBytes(__LINE__)
void vNepMathCrcUtilCalculate_CMockIgnoreArg_ulNumberOfBytes(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilCalculate_IgnoreArg_pucBuffer() vNepMathCrcUtilCalculate_CMockIgnoreArg_pucBuffer(__LINE__)
void vNepMathCrcUtilCalculate_CMockIgnoreArg_pucBuffer(UNITY_LINE_TYPE cmock_line);
#define vNepMathCrcUtilCalculate_IgnoreArg_pulCrcValue() vNepMathCrcUtilCalculate_CMockIgnoreArg_pulCrcValue(__LINE__)
void vNepMathCrcUtilCalculate_CMockIgnoreArg_pulCrcValue(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
